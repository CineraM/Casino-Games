<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5v+UkpT/7e3u/6Gfnv/GxMX///////7+/v/9/f3/6OXi/9PQzP9+fnr/BgUF/wEAAP8BAAD/AAAA/xYW
        FP/Ly8r////////////+/v7//v7+//////+zs7PyQ0JETVRUVQAAAAAANzZAABQUIhWYlpjB+fn5/9bS
        1P+knZ//8fDw/5KQkv/p6Or/v72+/6Wipv///////v7+//7+/v///////////8fGxv8cGxv/AAAA/wAA
        AP8AAAD/Nzg5/+Xl5f///////v7+//79/v/+/v7//////9TT0/9OTE6B//8AAGRabABhYGMATktPPK+t
        ueynoP//lYzE/6ikpf/5+fn/mJaX/+Ph4v/b29v/jIqL//T09f///////v7+//7+/v//////+fj5/5iV
        lv8tKir/FRMT/zk5Ov+2trf//v7+//7+/v/+/v7//v7+//7+/v//////6+vr/25scLUGAA8NMCs2AOrp
        zQBsamhzwsDb/Xp0//9gWb3/srCy//////+ppqj/2NXY//T08/+LiYn/4eDh///////+/v7//v7+//7+
        /v/+/v7/+vr6/9rY2P/GxMX/4uLi//7+/v/+/v7//v7+//7+/v/+/v7//v7+//79/v/7+vv/lJOT2yki
        KiY5NDgAAAADDYyLirDS0O//rqr+/5mYtv+9u7r/trG0/29scf/Ewsb//////52bmf/Av8D///////7+
        /v/+/v7//v7+//7+/v///////////////////////v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+////
        //+4t7X0QDtAU1dTVQAAAAAYl5eXzeHg+f/JyP3/qKWp/8K/wf95dHb/Nzc6/7S0tf/u6v//fXW7/5yc
        ov////7////////////+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+
        /v/+/v7//////9fW1f5bV1mBAAAAAgAAAAVfW2Fhnpigw8G9wuyRj5T9zcjN/8rDyf+OjJL/qqqr/9HJ
        //9HOdn/eHWH//Py8P+9u7//lZOZ/+jo6f///////v7+//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+
        /v/+/v7//v7+//7+/v//////7u7u/356fLcUCRURAAAAAAAAAAIQBwoTPCowRGZjZsLg3+D/o56j/5uX
        m/+ioaT/4t///7658P9xboX/09LS/2NgYf8qKSz/2djZ///////+/v7//v7+//7+/v/+/v7//v7+//7+
        /v/+/v7//v7+//7+/v/////////////////09PT/fHt+yQAAABgAAAAAAAAAABEJCgAAAAAFaGhqld7e
        4P/Z2dv/09LT/52bnP/X1fn/opn7/3dznf/AwL3/z8vO/6Geov/Jxcz//Pz8//7+/v/+/f7//v7+//7+
        /v/+/v7//////////////////f3+//X19v/i4eP/x8XH+ZqYm+ZKSk17AAAABgAAAAAAAAAAEQwKAP//
        /wBCOTs4e3Z7pZSSlsWPipDYhYKG9+7u9v+4tv//srG//6Kgn//Z1Nf/o52l/7Kts////////v7+///+
        ///////////////+///39vj/5OPl/8nIyvmlpKfng4CDxV9cXpg9OjhjJiMgNw8RDwoWFxUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAAJAgAAFwkBBClXV1udycjK+tfW3PmvrbDzfnx++vHx8v+0s7b/w8PG////
        ////////9/f4/+no6v/NzM/6qqir64eFiMhgXWCbQjw9aR4bGzoEAQEZAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMScoACceHx1RRkllVE1QZTsyNU1TUlap2dnb//Pz
        9P/i4uT/z87R+bCvseyKh4rKZmJlnkM/Q2ojHh86BQQDGwAAAAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdl5QANzM4AFBL
        TkJ0cXTXioiM5mZma7ZDPUJ6IyAiRQUEBB0AAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+A8AB/AAAAfgAAAHwAAAA4AAAAOAAAABgAAAAcAAAAHAAAAA4AAAAOAA
        AADwAAAA8AAAAeAAAAPgAAAH4AAAB8AAAAfAAAADwAAAA4AAAAOAAAADgAAAAYAAAAEAAAABAAAAAAAA
        AACAAAAA4AAAAPAAAAHwAAAP/wAA///wD/8=
</value>
  </data>
</root>